<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<AWSProjectType>Lambda</AWSProjectType>
		<PublishAot>true</PublishAot>
		<EventSourceSupport>false</EventSourceSupport>
		<UseSystemResourceKeys>true</UseSystemResourceKeys>
		<InvariantGlobalization>true</InvariantGlobalization>
		<StripSymbols>true</StripSymbols>
		<OptimizationPreference>Speed</OptimizationPreference>

     <!-- Avoid the copious logging from the native AOT compiler -->
    <IlcGenerateStackTraceData>false</IlcGenerateStackTraceData>
    <IlcOptimizationPreference>Size</IlcOptimizationPreference>
     <!-- Set trimming level: full is most aggressive -->
    <TrimMode>full</TrimMode>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Amazon.Lambda.Core" Version="2.6.0" />
    <PackageReference Include="Amazon.Lambda.Logging.AspNetCore" Version="4.0.0" />
    <PackageReference Include="Amazon.Lambda.RuntimeSupport" Version="1.12.0" />
    <PackageReference Include="Amazon.Lambda.APIGatewayEvents" Version="2.7.1" />
    <PackageReference Include="Amazon.Lambda.Serialization.SystemTextJson" Version="2.4.4" />
    <PackageReference Include="Amazon.Lambda.Annotations" Version="1.6.1" />
  </ItemGroup>
  <!-- 
    The FrameworkReference is used to reduce the deployment bundle size by not having to include 
    dependencies like Microsoft.Extensions.DependencyInjection. The Microsoft.AspNetCore.App
    which is available in the Managed .NET Lambda runtime already includes those assemblies.
  -->
  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="../../Mailing.Lambda.Core/Mailing.Lambda.Core.csproj" />
  </ItemGroup>
  <ItemGroup>
		<TrimmerRootAssembly Include="AWSSDK.Core" />
	</ItemGroup>
</Project>